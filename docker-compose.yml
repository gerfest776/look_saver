version: '3.8'

x-settings: &global
  environment:
    - HOST="0.0.0.0:8080"
    - SECRET_KEY='django-insecure-j)rc7@f%y3dn1(+v0*@c-*zov6&af(3b315*qj8y^ujt%mv7ux'
    - DEBUG=True
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_DB=postgres
    - PGDATA=/var/lib/postgresql/data
    - DB_NAME=postgres
    - DB_USER=postgres
    - DB_PASSWORD=postgres
    - DB_HOST=database
    - DB_PORT=5432
    - CELERY_BROKER_URL = redis://0.0.0.0:6379
    - CELERY_RESULT_BACKEND = redis://0.0.0.0:6379
    - CELERY_ACCEPT_CONTENT = application/json
    - CELERY_RESULT_SERIALIZER = json
    - CELERY_TASK_SERIALIZER = json

services:
  api:
    container_name: api
    command: python manage.py runserver
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    <<: *global
    depends_on:
      - database

  database:
    image: postgres:13.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    <<: *global

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  celery:
    restart: always
    build:
      context: .
    command: celery -A look_saver worker -l INFO
    <<: *global
    depends_on:
      - database
      - redis
      - api

volumes:
  postgres_data:
  redis-data: